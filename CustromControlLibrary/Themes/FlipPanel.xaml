<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CustomControlLibrary">
        
    <Style TargetType="{x:Type local:FlipPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FlipPanel}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        
                        <!--Front Content-->
                        <Border x:Name="FrontContent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}">

                            <ContentPresenter Content="{TemplateBinding FrontContent}"/>
                        </Border>
                        
                        <!--Back Content-->
                        <Border x:Name="BackContent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}">

                            <ContentPresenter Content="{TemplateBinding BackContent}"/>
                        </Border>
                        
                        <!--Flip Button-->
                        <ToggleButton x:Name="FlipButton" Grid.Row="1" Margin="0 10 0 0" RenderTransformOrigin="0.5 0.5" Width="19" Height="19">
                            <ToggleButton.Template>
                                <!--注意此处没有指定ControlTemplate.TargetType类型-->
                                <ControlTemplate>
                                    <Grid>
                                        <Ellipse Stroke="#FFA9A9A9" Fill="AliceBlue"/>
                                        <Path Data="M1 1.5 L 4.5 5 8 1.5" Stroke="#FF666666" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Grid>
                                </ControlTemplate>
                            </ToggleButton.Template>
                            <ToggleButton.RenderTransform>
                                <RotateTransform Angle="-90"/>
                            </ToggleButton.RenderTransform>
                        </ToggleButton>

                        <!--在控件模板的根元素（必须是布局面板）上定义状态组-->
                        <!--可视化状态用于控件在适当状态时的外观。所以将Duration设置为0是完全正确的。-->
                        <!--对于Normal状态，只需将BackContnet控件隐藏；对于Flipped状态，需将FrontContent控件隐藏，并将FlippedButton按钮旋转-->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ViewStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BackContent" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Flipped">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="FrontContent" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="FlipButton" 
                                                         Storyboard.TargetProperty="RenderTransform.Angle"
                                                         To="90" Duration="0"/>
                                    </Storyboard>
                                </VisualState>

                                <!--状态过渡-->
                                <VisualStateGroup.Transitions>
                                    <!--不使用故事板，创建持续时间为0.7秒的动画以改变FlipPanel控件的透明度，该过度为默认过度，应用该状态组的所有过度效果-->
                                    <!--<VisualTransition GeneratedDuration="0:0:0.7"/>-->
                                    
                                    <!--定义多个过渡，进入不同的状态，持续时间不同。也可使用From，当离开某个状态时应用的过度。也可结合使用From和To属性。-->
                                    <!--<VisualTransition To="Flipped" GeneratedDuration="0:0:0.5"/>-->
                                    <!--<VisualTransition To="Normal" GeneratedDuration="0:0:0.1"/>-->
                                    
                                    <!--使用动画 必须设置VisualTransition.GeneratedDuration属性以匹配动画的持续时间，如果没有设置该细节，VisualStateManager就不能使用自定义过渡，而且将立即应用新状态-->
                                    <!--VisualTransition.GeneratedDuration的实际时间值对于自定义过渡仍无效果，因为它只应用于自动生成的动画-->
                                    <VisualTransition To="Flipped" GeneratedDuration="0:0:0.7">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="FlipButton"
                                                             Storyboard.TargetProperty="RenderTransform.Angle"
                                                             To="90" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition To="Normal" GeneratedDuration="0:0:0.7">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="FlipButton"
                                                             Storyboard.TargetProperty="RenderTransform.Angle"
                                                             To="-90" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>