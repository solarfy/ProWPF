<Window x:Class="ProWPF.Advanced.StyleAndBehavior"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ProWPF.Advanced"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:behaviors="clr-namespace:ProWPF.Behaviors"
        mc:Ignorable="d"
        Title="样式和行为" Height="500" Width="800">

    <Window.Resources>
        <sys:Double x:Key="BigSize">24</sys:Double>
        <sys:Double x:Key="NormalSize">14</sys:Double>
        
        <!--不指定x:Key可通过TargetType使用类型自动样式 -->
        <!--<Style TargetType="FrameworkElement">
            <Setter Property="Margin" Value="4"/>
        </Style>-->
                
        <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="FontSize" Value="{StaticResource NormalSize}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="Content" Value="A Mouse Over Button"/>
        </Style>

        <!--关联事件处理程序（事件设置器）-->
        <Style x:Key="MouseOverEventSetterStyle" BasedOn="{StaticResource BaseButtonStyle}" TargetType="Button">
            <EventSetter Event="MouseEnter" Handler="Button_MouseEnter"/>
            <EventSetter Event="MouseLeave" Handler="Button_MouseLeave"/>
        </Style>
        
        <!--属性触发器-->
        <Style x:Key="MouseOverTriggerStyle" BasedOn="{StaticResource BaseButtonStyle}" TargetType="Button">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="FontSize" Value="{StaticResource BigSize}"/>
                </Trigger>

                <!--多条件触发-->
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsFocused" Value="True"/>
                        <!--<Condition Property="IsMouseOver" Value="True"/>-->
                        <Condition Property="IsPressed" Value="True"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Foreground" Value="Red"/>
                    </MultiTrigger.Setters>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        
        <!--事件触发器-->
        <Style x:Key="MouseOverEventTriggerStyle" BasedOn="{StaticResource BaseButtonStyle}" TargetType="Button">
            <Style.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="FontSize" To="{StaticResource BigSize}" Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>

                <EventTrigger RoutedEvent="MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <!--此处没有指定具体的值，WPF会默认使用第一次动画之前的值-->
                                <DoubleAnimation Storyboard.TargetProperty="FontSize" Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        
        <!--属性触发器使用动画-->
        <Style x:Key="MouseOverTriggerAnimationStyle" BasedOn="{StaticResource BaseButtonStyle}" TargetType="Button">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="FontSize" To="{StaticResource BigSize}" Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>

                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <!--此处没有指定具体的值，WPF会默认使用第一次动画之前的值-->
                                <DoubleAnimation Storyboard.TargetProperty="FontSize" Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        
    </Window.Resources>

    <Grid Margin="4">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="2*"/>
        </Grid.RowDefinitions>

        <UniformGrid Columns="4">
            <GroupBox Header="事件设置器（关联事件处理程序）">
                <Button Style="{StaticResource MouseOverEventSetterStyle}"/>
            </GroupBox>

            <GroupBox Header="属性触发器">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Button Grid.Row="0" Style="{StaticResource MouseOverTriggerStyle}" Content="点击此按钮!"/>
                    <TextBlock Text="*触发器不需要编写翻转逻辑，只要停止应用触发器，元素就会恢复到正常外观。" 
                           Grid.Row="1" Margin="4" Foreground="Green" TextWrapping="Wrap"/>
                </Grid>
            </GroupBox>

            <GroupBox Header="事件触发器">
                <Button Style="{StaticResource MouseOverEventTriggerStyle}"/>
            </GroupBox>

            <GroupBox Header="属性触发器使用动画">
                <Button Style="{StaticResource MouseOverTriggerAnimationStyle}"/>
            </GroupBox>
        </UniformGrid>

        <GroupBox Grid.Row="1" Header="行为" Margin="4">
            <Canvas>
                <TextBlock FontSize="12" Foreground="Red" TextWrapping="Wrap">
                    * 安装Expression Blend，Nuget安装Expression.Blend.Sdk
                    <LineBreak/>
                    System.Windows.Interactivity.dll 该程序集定义了支持行为的基本类，它是行为特征的基础。（本例中只添加了该程序集）
                    <LineBreak/>
                    Microsoft.Expression.Interactions.dll 该程序集通过添加可选的以核心行为类为基础的动作和触发器类，增加了一些扩展。
                </TextBlock>

                <Button Content="拖拽这个Button" Padding="12" Canvas.Left="100" Canvas.Top="100">
                    <i:Interaction.Behaviors>
                        <behaviors:DragInCanvasBehavior/>
                    </i:Interaction.Behaviors>
                </Button>

                <Label Content="拖拽这个Label" Padding="12" Canvas.Left="300" Canvas.Top="100" BorderBrush="Orange" BorderThickness="1">
                    <i:Interaction.Behaviors>
                        <behaviors:DragInCanvasBehavior/>
                    </i:Interaction.Behaviors>
                </Label>

                <Ellipse Canvas.Left="500" Canvas.Top="100" Height="50" Width="50" Fill="Green" >
                    <i:Interaction.Behaviors>
                        <behaviors:DragInCanvasBehavior/>
                    </i:Interaction.Behaviors>
                </Ellipse>

                <Rectangle Canvas.Left="700" Canvas.Top="100" Height="50" Width="50" Fill="blue">
                    <i:Interaction.Behaviors>
                        <behaviors:DragInCanvasBehavior/>
                    </i:Interaction.Behaviors>
                </Rectangle>

                <TextBox Canvas.Left="100" Canvas.Top="200" MinWidth="90" MinHeight="30" VerticalContentAlignment="Center" Padding="4">
                    <i:Interaction.Behaviors>
                        <behaviors:WatermarkTexBehavior Watermark="带水印，可拖动的TextBox"/>
                        <behaviors:DragInCanvasBehavior/>
                    </i:Interaction.Behaviors>
                </TextBox>

                <TextBox Canvas.Left="300" Canvas.Top="200" MinWidth="90" MinHeight="30" VerticalContentAlignment="Center" Padding="4">
                    <i:Interaction.Behaviors>
                        <behaviors:WatermarkTexBehavior Watermark="带水印，可拖动的TextBox" WatermarkBrush="OrangeRed"/>
                        <behaviors:DragInCanvasBehavior/>
                    </i:Interaction.Behaviors>
                </TextBox>

                <TextBox Canvas.Left="500" Canvas.Top="200" MinWidth="90" MinHeight="30" VerticalContentAlignment="Center" Padding="4">
                    <i:Interaction.Behaviors>
                        <behaviors:WatermarkTexBehavior Watermark="带水印，可拖动的TextBox" WatermarkBrush="Gold"/>
                        <behaviors:DragInCanvasBehavior/>
                    </i:Interaction.Behaviors>
                </TextBox>
            </Canvas>
        </GroupBox>
    </Grid>
   
</Window>
