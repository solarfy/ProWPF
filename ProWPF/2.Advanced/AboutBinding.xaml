<Window x:Class="ProWPF.Advanced.AboutBinding"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ProWPF.Advanced"
        mc:Ignorable="d"
        Title="绑定" Height="900" Width="1000">

    <Window.Resources>
        <FontFamily x:Key="font">/Fonts/FZYanSJW.ttf</FontFamily>

        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Margin" Value="4"/>
        </Style>
    </Window.Resources>
    
    <Grid Margin="4">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <GroupBox Margin="4" Header="元素绑定">
            <UniformGrid Margin="4" Columns="3">
                <UniformGrid.Resources>
                    <Style TargetType="{x:Type Slider}">
                        <Setter Property="Maximum" Value="48"/>
                        <Setter Property="Minimum" Value="8"/>
                        <Setter Property="Value" Value="12"/>
                        <Setter Property="Margin" Value="4"/>
                        <Setter Property="TickFrequency" Value="1"/>
                        <Setter Property="IsSnapToTickEnabled" Value="True"/>
                    </Style>

                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Margin" Value="4"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                    </Style>

                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="MinWidth" Value="30"/>
                        <Setter Property="Text" Value="12"/>
                        <Setter Property="Margin" Value="4"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                </UniformGrid.Resources>

                <GroupBox Header="Bliding Source: Slider，目标TextBox">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!--TextBox 需失去焦点后触发，可通过修改UpdateSourceTrigger方式修改-->
                        <Slider x:Name="slider_1"/>
                        <TextBlock Grid.Row="1" Text="文本样式 Simple Text" FontSize="{Binding ElementName=slider_1, Path=Value}"/>
                        <StackPanel Grid.Row="2" Margin="4" Orientation="Horizontal">
                            <TextBlock Text="输入字体尺寸："/>
                            <TextBox Text="{Binding ElementName=slider_1, Path=Value, Mode=TwoWay}"/>
                        </StackPanel>
                    </Grid>
                </GroupBox>

                <GroupBox Header="Bliding Source: TextBox，目标Slider">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!--Slider 实时触发-->
                        <Slider Value="{Binding ElementName=text_2, Path=Text, Mode=TwoWay}"/>
                        <TextBlock Grid.Row="1" Text="文本样式 Simple Text" FontSize="{Binding ElementName=text_2, Path=Text}"/>
                        <StackPanel Grid.Row="2" Margin="4" Orientation="Horizontal">
                            <TextBlock Text="输入字体尺寸："/>
                            <TextBox x:Name="text_2"/>
                        </StackPanel>
                    </Grid>
                </GroupBox>

                <GroupBox Header="Bliding Source: Slider，目标：TextBox 手动触发">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                   
                        <Slider x:Name="slider_3"/>
                        <TextBlock x:Name="textblk_3" Grid.Row="1" Text="文本样式 Simple Text"/>
                        <StackPanel Grid.Row="2" Margin="4" Orientation="Horizontal">
                            <TextBlock Text="输入字体尺寸："/>
                            <TextBox x:Name="text_3"/>
                            <Button Margin="4" Padding="12,4" Click="BtnExpliciteUpdate_Click">确认</Button>
                        </StackPanel>
                    </Grid>
                </GroupBox>
                
                
            </UniformGrid>
        </GroupBox>

        <UniformGrid Grid.Row="1" Columns="2" Margin="4">
            <GroupBox Header="Blinding Mode 枚举" Margin="4" Padding="4">
                <Grid ShowGridLines="True">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock>OneWay</TextBlock>
                    <TextBlock Grid.Column="1">当源属性变化时更新目标属性</TextBlock>

                    <TextBlock Grid.Row="1">TwoWay</TextBlock>
                    <TextBlock Grid.Column="1" Grid.Row="1">当源属性变化时更新目标属性，并且当目标属性变化时更新源属性</TextBlock>
                    
                    <TextBlock Grid.Row="2">OneTime</TextBlock>
                    <TextBlock Grid.Column="1" Grid.Row="2">最初根据源属性值设置目标属性，之后所有的改变都会被忽略
                        （除非使用特殊的方法，如BindingExpression.UpdateTarget()方法），可使用这种模式降低开销</TextBlock>
                    
                    <TextBlock Grid.Row="3">OneWayToSource</TextBlock>
                    <TextBlock Grid.Column="1" Grid.Row="3">当目标属性变化时更新源属性（适用于设置一些非依赖项属性的属性）</TextBlock>

                    <TextBlock Grid.Row="4">Default</TextBlock>
                    <TextBlock Grid.Column="1" Grid.Row="4">此模式依赖于目标属性，既可以是双向的（如TextBox.Text属性），也可以是单项的。
                        除非明确指定另一种模式，否则所有绑定都使用该方式</TextBlock>

                </Grid>
            </GroupBox>

            <GroupBox Header="UpdateSourceTrigger 枚举">
                <Grid ShowGridLines="True">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.ColumnSpan="2" Foreground="Red" FontSize="12">
                        * 该类枚举不影响目标的更新方式，只针对TwoWay或OneWayToSource模式中由目标更新源的通知方式）
                    </TextBlock>

                    <TextBlock Grid.Row="1">PropertyChanged</TextBlock>
                    <TextBlock Grid.Row="1" Grid.Column="1">当目标属性发生变化时立即更新源</TextBlock>

                    <TextBlock Grid.Row="2">LostFocus</TextBlock>
                    <TextBlock Grid.Row="2" Grid.Column="1">当目标属性发生变化时并且目标丢失焦点时更新源</TextBlock>

                    <TextBlock Grid.Row="3">Explicit</TextBlock>
                    <TextBlock Grid.Row="3" Grid.Column="1">只有调用BindingExpression.UpdateSource()方法才能更新源</TextBlock>

                    <TextBlock Grid.Row="4">Default</TextBlock>
                    <TextBlock Grid.Row="4" Grid.Column="1">更加目标属性元数据确定更新行为。
                        （大多数是PropertyChanged，但TextBox.Text属性默认行为是LostFocus）</TextBlock>
                </Grid>
            </GroupBox>
        </UniformGrid>

        <GroupBox Grid.Row="2" Margin="4" Header="非元素绑定">
            <UniformGrid Rows="2">
                <!--Source 静态量-->
                <TextBlock Text="{Binding Source={x:Static SystemFonts.IconFontFamily}, Path=Source}"/>
                
                <!--Source StaticResource-->
                <TextBlock Text="{Binding Source={StaticResource font}, Path=Source}"/>
                
                <!--RelativeSource 属性设置语法-->
                <TextBlock>
                    <TextBlock.Text>
                        <Binding Path="(TextBlock.FontFamily)">
                            <Binding.RelativeSource>
                                <RelativeSource Mode="FindAncestor" AncestorType="{x:Type Window}"/>
                            </Binding.RelativeSource>
                        </Binding>
                    </TextBlock.Text>
                </TextBlock>

                <!--RelativeSource 标记扩展语法-->
                <TextBlock Text="{Binding Path=(TextBlock.FontFamily), 
                    RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"/>

                <!--DataContext 大量元素绑定到同一个对象-->
                <StackPanel DataContext="{x:Static SystemFonts.IconFontFamily}" TextBlock.Foreground="Green" Orientation="Horizontal">
                    <TextBlock Text="{Binding Path=Source}"/>
                    <TextBlock Text="{Binding Path=Source}"/>
                    <TextBlock Text="{Binding Path=Source}"/>
                </StackPanel>

            </UniformGrid>
        </GroupBox>
        
        
        <GroupBox Grid.Row="3" Header="非元素对象" Margin="4">
            <UniformGrid Columns="2">
                <Grid Margin="4" ShowGridLines="True">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock>Source</TextBlock>
                    <TextBlock Grid.Column="1">该属性指向源对象的引用（提供数据的对象）</TextBlock>

                    <TextBlock Grid.Row="1">RelativeSource</TextBlock>
                    <TextBlock Grid.Column="1" Grid.Row="1">这是引用，使用RelativeSource对象指向源对象</TextBlock>

                    <TextBlock Grid.Row="2">DataContext</TextBlock>
                    <TextBlock Grid.Column="1" Grid.Row="2">如果没有指定源，WPF就从当前元素开始在元素树上查找。
                        检查每个元素，并使用第一个非空的DataContext属性</TextBlock>
                </Grid>

                <GroupBox Header="RelativeSourceMode 枚举">
                    <Grid Margin="4" ShowGridLines="True">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock>Self</TextBlock>
                        <TextBlock Grid.Column="1">绑定到同一个元素的另一个元素上</TextBlock>

                        <TextBlock Grid.Row="1">FindAncestor</TextBlock>
                        <TextBlock Grid.Column="1" Grid.Row="1">绑定到父元素。WPF将查找元素树直到发现期望的父元素。
                            为了指定父元素，还必须设置AncestorType属性以指示希望查找的父元素的类型。还可以利用AncestorLevel属性
                            略过发现的一定数量的特定元素。例如查找第3个ListBoxItem元素，设置AncestorLevel=3</TextBlock>

                        <TextBlock Grid.Row="2">PreviousData</TextBlock>
                        <TextBlock Grid.Column="1" Grid.Row="2">绑定到列表中前一项</TextBlock>

                        <TextBlock Grid.Row="3">TemplateParent</TextBlock>
                        <TextBlock Grid.Column="1" Grid.Row="3">绑定到应用模板的元素。只能位于控件模板或数据模板内部，这种模式才工作</TextBlock>

                    </Grid>
                </GroupBox>
                
            </UniformGrid>
        </GroupBox>
    </Grid>
</Window>
