<Window x:Class="ProWPF.Advanced.AboutCommand"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ProWPF.Advanced"
        mc:Ignorable="d"
        Title="关于命令" Height="450" Width="800">

    <Window.Resources>
        <!--禁用输入绑定（Ctrl+V）-->
        <KeyBinding x:Key="DisableCtrlV" Command="ApplicationCommands.NotACommand" Key="V" Modifiers="Ctrl"/>
    </Window.Resources>
    
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.New" Executed="NewCommand_Executed"/>
    </Window.CommandBindings>

    <Grid Margin="4">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <UniformGrid Margin="4">
            <!--某些元素的显示会自动绑定到命令的Text属性，但Button.Content不会，需要自己手动设置-->
            <Button Margin="4" Command="ApplicationCommands.New" Padding="10"
                Content="{Binding Source={x:Static ApplicationCommands.New}, Path=Text}" CommandParameter="button_1"/>
            <!--推荐使用下列方式，因为上述方式New命令被调用两次-->
            <Button Margin="4" Command="ApplicationCommands.New" Padding="10"
                Content="{Binding RelativeSource={RelativeSource self}, Path=Command.Text}" CommandParameter="button_2"/>

            <Button Margin="4" Content="手动触发命令" Click="Manual_Click" Padding="10"/>

            <Button Margin="4" Content="刷新命令的可执行状态" Padding="10" Click="UpdateCanExecute_Click"/>
        </UniformGrid>

        <GroupBox Grid.Row="1" Header="具有内置命令的控件" Margin="4">
            <UniformGrid Margin="4">
                <UniformGrid.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Margin" Value="4"/>
                        <Setter Property="Padding" Value="8,2"/>
                    </Style>
                    
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="Margin" Value="4"/>
                        <Setter Property="BorderBrush" Value="Orange"/>
                    </Style>
                </UniformGrid.Resources>
                
                <GroupBox Header="ToolBar内部" Margin="4">
                    <DockPanel Margin="4" LastChildFill="True">
                        <ToolBar DockPanel.Dock="Top">
                            <StackPanel Orientation="Horizontal">
                                <Button Command="ApplicationCommands.Cut" Content="{Binding RelativeSource={RelativeSource self}, Path=Command.Text}"/>
                                <Button Command="ApplicationCommands.Copy" Content="{Binding RelativeSource={RelativeSource self}, Path=Command.Text}"/>
                                <Button Command="ApplicationCommands.Paste" Content="{Binding RelativeSource={RelativeSource self}, Path=Command.Text}"/>
                            </StackPanel>
                        </ToolBar>
                        
                        <TextBox>
                            <TextBox.InputBindings>
                                <StaticResource ResourceKey="DisableCtrlV"/>
                            </TextBox.InputBindings>
                        </TextBox>
                    </DockPanel>
                </GroupBox>

                <GroupBox Header="MenuItem内部" Margin="4">
                    <DockPanel Margin="4" LastChildFill="True">
                        <Menu DockPanel.Dock="Top">
                            <MenuItem Margin="4" Padding="8,2" Command="ApplicationCommands.Cut"/>
                            <MenuItem Margin="4" Padding="8,2" Command="ApplicationCommands.Copy"/>
                            <MenuItem Margin="4" Padding="8,2" Command="ApplicationCommands.Paste"/>
                        </Menu>
                        
                        <TextBox>
                            <TextBox.InputBindings>
                                <StaticResource ResourceKey="DisableCtrlV"/>
                            </TextBox.InputBindings>
                        </TextBox>
                    </DockPanel>
                </GroupBox>

                <GroupBox Header="其他控件(设置CommandTarget方式)" Margin="4">
                    <DockPanel Margin="4" LastChildFill="True">
                        <StackPanel Margin="4" DockPanel.Dock="Top" Orientation="Horizontal">
                            <Button Command="ApplicationCommands.Cut" Content="{Binding RelativeSource={RelativeSource self}, Path=Command.Text}"
                                    CommandTarget="{Binding ElementName=text}"/>
                            <Button Command="ApplicationCommands.Copy" Content="{Binding RelativeSource={RelativeSource self}, Path=Command.Text}"
                                    CommandTarget="{Binding ElementName=text}"/>
                            <Button Command="ApplicationCommands.Paste" Content="{Binding RelativeSource={RelativeSource self}, Path=Command.Text}"
                                    CommandTarget="{Binding ElementName=text}"/>
                        </StackPanel>
                        
                        <TextBox x:Name="text">
                            <TextBox.InputBindings>
                                <StaticResource ResourceKey="DisableCtrlV"/>
                            </TextBox.InputBindings>
                        </TextBox>
                    </DockPanel>
                </GroupBox>


                <GroupBox Header="其他控件(附加属性FocusManager.IsFocusScope)" Margin="4">
                    <DockPanel Margin="4" LastChildFill="True">
                        <!--ToolBar和Menu默认将FocusManager.IsFocusScope设置为True-->
                        <!--当触发命令时，该焦点范围会通知WPF在父元素的焦点范围内查找元素-->
                        <StackPanel Margin="4" DockPanel.Dock="Top" Orientation="Horizontal" FocusManager.IsFocusScope="True">
                            <Button Command="ApplicationCommands.Cut" Content="{Binding RelativeSource={RelativeSource self}, Path=Command.Text}"/>
                            <Button Command="ApplicationCommands.Copy" Content="{Binding RelativeSource={RelativeSource self}, Path=Command.Text}"/>
                            <Button Command="ApplicationCommands.Paste" Content="{Binding RelativeSource={RelativeSource self}, Path=Command.Text}"/>
                        </StackPanel>
                        <TextBox>
                            <TextBox.InputBindings>
                                <StaticResource ResourceKey="DisableCtrlV"/>
                            </TextBox.InputBindings>
                        </TextBox>
                    </DockPanel>
                </GroupBox>
            </UniformGrid>
        </GroupBox>
    </Grid>
</Window>
