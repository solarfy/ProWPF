<Window x:Class="ProWPF.ShapeAndAnimation.AboutTransform"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ProWPF.ShapeAndAnimation"
        mc:Ignorable="d"
        Title="关于变换" Height="450" Width="800">
    <Window.Resources>
        <Style TargetType="Rectangle">
            <Setter Property="Width" Value="80"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="Stroke" Value="Blue"/>
            <Setter Property="Fill" Value="Yellow"/>
        </Style>
    </Window.Resources>
    
    <UniformGrid Columns="3">
        <GroupBox Header="默认左上角为原点">
            <Grid>
                <Rectangle>
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="0"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Rectangle>
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="25"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Rectangle>
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="50"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Rectangle>
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="75"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Rectangle>
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="90"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
            </Grid>
        </GroupBox>

        <GroupBox Header="使用绝对坐标的CenterX，CenterY">
            <Grid>
                <Rectangle>
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="0" CenterX="20" CenterY="5"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Rectangle>
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="25" CenterX="20" CenterY="5"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Rectangle>
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="50" CenterX="20" CenterY="5"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Rectangle>
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="75" CenterX="20" CenterY="5"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Rectangle>
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="90" CenterX="20" CenterY="5"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
            </Grid>
        </GroupBox>

        <GroupBox Header="使用相对坐标的RenderTransformOrigin">
            <Grid>
                <Rectangle RenderTransformOrigin="0.5 0.5">
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="0"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Rectangle RenderTransformOrigin="0.5 0.5">
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="25"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Rectangle RenderTransformOrigin="0.5 0.5">
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="50"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Rectangle RenderTransformOrigin="0.5 0.5">
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="75"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Rectangle RenderTransformOrigin="0.5 0.5">
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="90"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
            </Grid>
        </GroupBox>

        <GroupBox Header="使用RenderTransformOrigin在图形之外旋转">
            <Grid>
                <Rectangle RenderTransformOrigin="1.2, 1.2">
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="0"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Rectangle RenderTransformOrigin="1.2, 1.2">
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="25"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Rectangle RenderTransformOrigin="1.2, 1.2">
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="50"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Rectangle RenderTransformOrigin="1.2, 1.2">
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="75"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Rectangle RenderTransformOrigin="1.2, 1.2">
                    <Rectangle.RenderTransform>
                        <RotateTransform Angle="90"/>
                    </Rectangle.RenderTransform>
                </Rectangle>
            </Grid>
        </GroupBox>

        <GroupBox Header="RotateTransform">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <TextBlock Margin="4" TextWrapping="Wrap">
                    RotateTransform
                    <LineBreak/>
                    StackPanel同时对两个按钮进行布局。在元素即将呈现时，旋转按钮，所以存在重叠。
                </TextBlock>

                <StackPanel Grid.Row="1" Margin="4">
                    <Button Content="旋转35°">
                        <Button.RenderTransform>
                            <RotateTransform Angle="35"/>
                        </Button.RenderTransform>
                    </Button>

                    <Button Content="无旋转特效按钮"/>
                </StackPanel>
            </Grid>
        </GroupBox>

        <GroupBox Header="LayoutTransform">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <TextBlock Margin="4" TextWrapping="Wrap">
                    LayoutTransform，在布局之前执行其工作，开销大些。
                    <LineBreak/>
                    StackPanel获取到的是旋转后的按钮所需的边界，并相应地布局第二个按钮。
                </TextBlock>

                <StackPanel Grid.Row="1" Margin="4">
                    <Button Content="旋转35°">
                        <Button.LayoutTransform>
                            <RotateTransform Angle="35"/>
                        </Button.LayoutTransform>
                    </Button>

                    <Button Content="无旋转特效按钮"/>
                </StackPanel>
            </Grid>
        </GroupBox>
    </UniformGrid>
</Window>
