<Window x:Class="ProWPF.ShapeAndAnimation.PathAndGeometry"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ProWPF.ShapeAndAnimation"
        xmlns:converter="clr-namespace:ProWPF.Converters"
        mc:Ignorable="d"
        Title="路径和几何图形" Height="600" Width="800">

    <Window.Resources>
        <CombinedGeometry x:Key="Ring" GeometryCombineMode="Exclude">
            <CombinedGeometry.Geometry1>
                <EllipseGeometry RadiusX="35" RadiusY="35" Center="35 35"/>
            </CombinedGeometry.Geometry1>

            <CombinedGeometry.Geometry2>
                <EllipseGeometry RadiusX="25" RadiusY="25" Center="35 35"/>
            </CombinedGeometry.Geometry2>
        </CombinedGeometry>

        <RectangleGeometry x:Key="Rect" Rect="0 30 60 10">
            <RectangleGeometry.Transform>
                <RotateTransform Angle="-45" CenterX="35" CenterY="35"/>
            </RectangleGeometry.Transform>
        </RectangleGeometry>

        <converter:CheckedToEnumConverter x:Key="CheckedToSweepDirectionConverter" TargetEnum="{x:Type SweepDirection}"/>
    </Window.Resources>

    <TabControl>
        <TabItem Header="直线、矩形和椭圆">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Rectangle Fill="Yellow" Stroke="Blue" Width="100" Height="100" RadiusX="20" RadiusY="20"/>

                <TextBlock Grid.Row="1" Margin="4" TextWrapping="Wrap">
                    Rectangle形状使用的是Height和Width，而RectangleGeometry使用的是4个数值来描述矩形的尺寸和位置，
                    前两个数值描述左上角的X和Y坐标，而后两个数值设置矩形的宽度和高度。
                </TextBlock>

                <Path Grid.Row="2" Fill="Yellow" Stroke="Blue">
                    <Path.Data>
                        <RectangleGeometry Rect="0,0,100,100" RadiusX="20" RadiusY="20"/>
                    </Path.Data>
                </Path>

                <Line Grid.Column="1" Stroke="Blue" X1="0" Y1="0" X2="100" Y2="100"/>

                <TextBlock Grid.Row="1" Grid.Column="1" Margin="4" TextWrapping="Wrap">
                    Line用的X1，Y1，X2，Y2，而LineGeometry使用StartPoint和EndPoint。
                </TextBlock>

                <Path Grid.Row="2" Grid.Column="1" Stroke="Blue">
                    <Path.Data>
                        <LineGeometry StartPoint="0 0" EndPoint="100 100"/>
                    </Path.Data>
                </Path>

                <Ellipse Grid.Column="2" Fill="Yellow" Stroke="Blue" Width="100" Height="50"/>

                <TextBlock Grid.Row="1" Grid.Column="2" Margin="4" TextWrapping="Wrap">
                    EllipseGeomerty的两个半径值是Ellipse的宽度和高度的一半。还可使用Center属性调整椭圆的圆心。
                </TextBlock>
                
                <Path Grid.Row="2" Grid.Column="2" Fill="Yellow" Stroke="Blue">
                    <Path.Data>
                        <EllipseGeometry RadiusX="50" RadiusY="25" Center="50 25"/>
                    </Path.Data>
                </Path>
            </Grid>
        </TabItem>

        <TabItem Header="组合形状">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <TextBlock Margin="4" TextWrapping="Wrap">
                    EvenOdd(默认):计算到达形状必须穿过的直线数量，如果是奇数则填充，偶数就不填充。
                </TextBlock>
                
                <Path Grid.Row="1" Stroke="Blue" Fill="Yellow">
                    <Path.Data>
                        <GeometryGroup FillRule="EvenOdd">
                            <RectangleGeometry Rect="0 0 100 100"/>
                            <EllipseGeometry Center="50 50" RadiusX="35" RadiusY="25"/>
                        </GeometryGroup>
                    </Path.Data>
                </Path>

                <TextBlock Grid.Column="1" TextWrapping="Wrap">
                    Nonzero:在EvenOdd规则上，如果是偶数计算经过的每条直线，在某个方向上直线的数量等于相反方向上直线的数量，就不填充，反之则填充。
                </TextBlock>

                <Path Grid.Row="1" Grid.Column="1" Stroke="Blue" Fill="Yellow">
                    <Path.Data>
                        <GeometryGroup FillRule="Nonzero">
                            <RectangleGeometry Rect="0 0 100 100"/>
                            <EllipseGeometry Center="50 50" RadiusX="35" RadiusY="25"/>
                        </GeometryGroup>
                    </Path.Data>
                </Path>
            </Grid>
        </TabItem>

        <TabItem Header="融合几何图形">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Grid.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="TextWrapping" Value="Wrap"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="20,0,0,0"/>
                    </Style>
                </Grid.Resources>

                <TextBlock Grid.Column="1">
                    Union 创建包含两个几何图形所有区域的形状
                </TextBlock>

                <TextBlock Grid.Row="1" Grid.Column="1">
                    Intersect 创建包含两个几何图形共有区域的形状
                </TextBlock>

                <TextBlock Grid.Row="2" Grid.Column="1">
                    Xor 创建包含两个几何图形非共有区域的形状。换句话说，就像先合并形状（使用Union），再移除共有部分（使用Intersect）。
                </TextBlock>

                <TextBlock Grid.Row="3" Grid.Column="1">
                    Exclude 创建的形状包含第一个几何图形的所有区域，但不包含第二个几何图形区域。
                </TextBlock>

                <Path Stroke="Blue" Fill="Yellow" VerticalAlignment="Center">
                    <Path.Data>
                        <CombinedGeometry GeometryCombineMode="Union">
                            <CombinedGeometry.Geometry1>
                                <RectangleGeometry Rect="0 0 70 50"/>
                            </CombinedGeometry.Geometry1>

                            <CombinedGeometry.Geometry2>
                                <EllipseGeometry RadiusX="35" RadiusY="20" Center="65 25"/>
                            </CombinedGeometry.Geometry2>
                        </CombinedGeometry>
                    </Path.Data>
                </Path>

                <Path Grid.Row="1" Stroke="Blue" Fill="Yellow" VerticalAlignment="Center">
                    <Path.Data>
                        <CombinedGeometry GeometryCombineMode="Intersect">
                            <CombinedGeometry.Geometry1>
                                <RectangleGeometry Rect="0 0 70 50"/>
                            </CombinedGeometry.Geometry1>

                            <CombinedGeometry.Geometry2>
                                <EllipseGeometry RadiusX="35" RadiusY="20" Center="65 25"/>
                            </CombinedGeometry.Geometry2>
                        </CombinedGeometry>
                    </Path.Data>
                </Path>

                <Path Grid.Row="2" Stroke="Blue" Fill="Yellow" VerticalAlignment="Center">
                    <Path.Data>
                        <CombinedGeometry GeometryCombineMode="Xor">
                            <CombinedGeometry.Geometry1>
                                <RectangleGeometry Rect="0 0 70 50"/>
                            </CombinedGeometry.Geometry1>

                            <CombinedGeometry.Geometry2>
                                <EllipseGeometry RadiusX="35" RadiusY="20" Center="65 25"/>
                            </CombinedGeometry.Geometry2>
                        </CombinedGeometry>
                    </Path.Data>
                </Path>
                
                <Path Grid.Row="3" Stroke="Blue" Fill="Yellow" VerticalAlignment="Center">
                    <Path.Data>
                        <CombinedGeometry GeometryCombineMode="Exclude">
                            <CombinedGeometry.Geometry1>
                                <RectangleGeometry Rect="0 0 70 50"/>
                            </CombinedGeometry.Geometry1>

                            <CombinedGeometry.Geometry2>
                                <EllipseGeometry RadiusX="35" RadiusY="20" Center="65 25"/>
                            </CombinedGeometry.Geometry2>
                        </CombinedGeometry>
                    </Path.Data>
                </Path>

                <StackPanel Orientation="Horizontal" Grid.Row="4" Grid.ColumnSpan="2">
                    <Path Stroke="Blue" Fill="Yellow" Data="{StaticResource Ring }"/>

                    <TextBlock Text="+" FontSize="48" Margin="20,0" Padding="0"/>

                    <Path Stroke="Blue" Fill="Yellow" Data="{StaticResource Rect}"/>

                    <TextBlock Text="=" FontSize="48" Margin="20,0" Padding="0"/>

                    <Path Stroke="Blue" Fill="Yellow">
                        <Path.Data>
                            <CombinedGeometry GeometryCombineMode="Union">
                                <CombinedGeometry.Geometry1>
                                    <StaticResource ResourceKey="Ring"/>
                                </CombinedGeometry.Geometry1>
                                <CombinedGeometry.Geometry2>
                                    <StaticResource ResourceKey="Rect"/>
                                </CombinedGeometry.Geometry2>
                            </CombinedGeometry>
                        </Path.Data>
                    </Path>

                    <Path Stroke="Blue" Margin="100,0,0,0">
                        <Path.Data>
                            <CombinedGeometry GeometryCombineMode="Exclude">
                                <CombinedGeometry.Geometry1>
                                    <!--U盘整体轮廓-->
                                    <CombinedGeometry>
                                        <CombinedGeometry.Geometry1>
                                            <CombinedGeometry GeometryCombineMode="Union">
                                                <CombinedGeometry.Geometry1>
                                                    <!--U盘插头-->
                                                    <RectangleGeometry Rect="0 20 25 40"/>
                                                </CombinedGeometry.Geometry1>
                                                <CombinedGeometry.Geometry2>
                                                    <!--U盘盘身-->
                                                    <RectangleGeometry Rect="25 10 80 60"/>
                                                </CombinedGeometry.Geometry2>
                                            </CombinedGeometry>
                                        </CombinedGeometry.Geometry1>

                                        <CombinedGeometry.Geometry2>
                                            <!--U盘盘尾-->
                                            <EllipseGeometry Center="105, 40" RadiusX="30" RadiusY="30"/>
                                        </CombinedGeometry.Geometry2>
                                    </CombinedGeometry>

                                </CombinedGeometry.Geometry1>

                                <CombinedGeometry.Geometry2>
                                    <!--U盘头、尾镂空圆-->
                                    <GeometryGroup>
                                        <EllipseGeometry Center="12, 30" RadiusX="5" RadiusY="5"/>
                                        <EllipseGeometry Center="12, 50" RadiusX="5" RadiusY="5"/>
                                        <EllipseGeometry Center="105, 40" RadiusX="20" RadiusY="20"/>
                                    </GeometryGroup>
                                </CombinedGeometry.Geometry2>
                            </CombinedGeometry>
                        </Path.Data>

                        <Path.Fill>
                            <LinearGradientBrush x:Name="linearGradientFill"  StartPoint="0.19 0" EndPoint="1 0">
                                <GradientStop Color="Green" Offset="0"/>
                                <GradientStop Color="Transparent" Offset="0"/>
                            </LinearGradientBrush>
                        </Path.Fill>

                        <Path.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard>
                                    <Storyboard RepeatBehavior="5x">
                                        <DoubleAnimation From="0" To="1" Duration="0:0:3"
                                                         Storyboard.TargetName="linearGradientFill"
                                                         Storyboard.TargetProperty="GradientStops[1].Offset"/>
                                        <DoubleAnimation From="0" To="1" Duration="0:0:3" BeginTime="0:0:1"
                                                         Storyboard.TargetName="linearGradientFill"
                                                         Storyboard.TargetProperty="GradientStops[0].Offset"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Path.Triggers>
                    </Path>
                </StackPanel>
            </Grid>
        </TabItem>

        <TabItem Header="直线和曲线">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.ColumnSpan="2" TextWrapping="Wrap" Margin="4">
                    PathGeometry对象都是由一个或多个PathFigure对象构建的（存储在PathGeometry.Figures集合中）。
                    每个Figure对象是一系列相互连接的直线和曲线，可闭合也可不闭合。
                    <LineBreak/>
                    注：每个PathGeometry对象可包含任意数量的PathFigure对象。
                </TextBlock>
                
                <Path Grid.Row="1" Stroke="Blue" Fill="Yellow">
                    <Path.Data>
                        <PathGeometry>
                            <PathFigure IsClosed="True" StartPoint="10,50">
                                <LineSegment Point="100,50"/>
                                <LineSegment Point="100,10"/>
                            </PathFigure>

                            <PathFigure IsClosed="False" IsFilled="False" StartPoint="10, 60">
                                <LineSegment Point="100,60"/>
                                <LineSegment Point="100,100"/>
                            </PathFigure>
                        </PathGeometry>
                                                
                    </Path.Data>
                </Path>

                <TextBlock Margin="20,4,4,4" TextWrapping="Wrap" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center">
                    PathFigure.StartPoint属性标识线段的起始点，LineSegment.Point属性标识单个线段的结束点，
                    PathFigure.IsClosed属性设置为True将起点和终点连接起来，PathFigure.IsFilled属性设置为Ture，就使用Path.Fill画刷填充图形内部的区域。
                </TextBlock>

                <Path Grid.Row="2" Stroke="Blue" Fill="Yellow">
                    <Path.Data>
                        <PathGeometry>
                            <PathFigure StartPoint="10,10" IsClosed="True" IsFilled="True">
                                <ArcSegment Point="100,10" Size="60 60"/>
                            </PathFigure>

                            <PathFigure StartPoint="10,60" IsClosed="False" IsFilled="False">
                                <ArcSegment Point="100,60" Size="60 60" SweepDirection="Clockwise"/>
                            </PathFigure>
                        </PathGeometry>
                    </Path.Data>
                </Path>

                <TextBlock Margin="20,4,4,4" TextWrapping="Wrap" Grid.Column="1" Grid.Row="2" VerticalAlignment="Center">
                    PathFigure.StartPoint属性标识弧线的起始点，ArcSegment.Point标识弧线的结束点，
                    ArcSegment.Size属性标识弧线假象椭圆的尺寸，假象的椭圆越大，边缘曲线就越缓和。（假象椭圆足够大，线段看起来像直线；假象椭圆足够小，就使用整个半圆连接两点）
                </TextBlock>

                <Grid Grid.Row="3" Grid.ColumnSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>


                    <Canvas Grid.Column="0" Margin="0,30,0,0">
                        <Canvas Canvas.Left="30" Canvas.Top="20">
                            <Path Stroke="Blue" StrokeDashArray="4 4" StrokeThickness="2">
                                <Path.Data>
                                    <EllipseGeometry Center="50 30" RadiusX="50" RadiusY="30"/>
                                </Path.Data>
                            </Path>

                            <Path Stroke="Yellow" StrokeThickness="2">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,30">
                                            <ArcSegment x:Name="arc1" SweepDirection="Clockwise" Point="100,30" Size="50 30"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>

                            <Path Fill="Blue">
                                <Path.Data>
                                    <GeometryGroup>
                                        <EllipseGeometry Center="0 30" RadiusX="4" RadiusY="4"/>
                                        <EllipseGeometry Center="100 30" RadiusX="4" RadiusY="4"/>
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                        </Canvas>

                        <TextBlock FontSize="10" Text="起点" Canvas.Top="42"/>
                        <TextBlock FontSize="10" Text="终点" Canvas.Left="140" Canvas.Top="42"/>
                        <TextBlock FontSize="10" Text="顺时针" Canvas.Left="64" Canvas.Top="00"/>
                        <TextBlock FontSize="10" Text="逆时针" Canvas.Left="64" Canvas.Top="90"/>

                        <RadioButton Canvas.Left="200" Canvas.Top="10"
                                     IsChecked="{Binding ElementName=arc1,Path=SweepDirection, Converter={StaticResource CheckedToSweepDirectionConverter}, ConverterParameter=Clockwise, Mode=TwoWay}">
                            顺时针(Clockwise)</RadioButton>
                        <RadioButton Canvas.Left="200" Canvas.Top="30"
                                     IsChecked="{Binding ElementName=arc1,Path=SweepDirection, Converter={StaticResource CheckedToSweepDirectionConverter}, ConverterParameter=Counterclockwise, Mode=TwoWay}">
                            逆时针(Countercolckwise)</RadioButton>
                    </Canvas>
                    
                    <Canvas Grid.Column="1" Margin="0,30,0,0">
                        <Canvas Canvas.Left="30" Canvas.Top="20">
                            <Path Stroke="Blue" StrokeDashArray="4 4" StrokeThickness="2">
                                <Path.Data>
                                    <EllipseGeometry Center="50 30" RadiusX="50" RadiusY="30"/>
                                </Path.Data>
                            </Path>

                            <Path Stroke="Yellow" StrokeThickness="2">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="12,50">
                                            <ArcSegment x:Name="arc2" Point="88,50" Size="50 30" IsLargeArc="False"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>

                            <Path Fill="Blue">
                                <Path.Data>
                                    <GeometryGroup>
                                        <EllipseGeometry Center="12 50" RadiusX="4" RadiusY="4"/>
                                        <EllipseGeometry Center="88 50" RadiusX="4" RadiusY="4"/>
                                    </GeometryGroup>
                                </Path.Data>
                            </Path>
                        </Canvas>

                        <TextBlock FontSize="10" Text="起点" Canvas.Left="10" Canvas.Top="68"/>
                        <TextBlock FontSize="10" Text="终点" Canvas.Left="130" Canvas.Top="68"/>
                        <TextBlock FontSize="10" Text="大狐" Canvas.Left="68" Canvas.Top="00"/>
                        <TextBlock FontSize="10" Text="小弧" Canvas.Left="68" Canvas.Top="90"/>

                        <CheckBox Canvas.Left="200" Canvas.Top="10" Checked="LargeArc_Checked" Unchecked="LargeArc_Unchecked">大弧(IsLargeAru=True)</CheckBox>

                        <TextBlock Canvas.Left="200" Canvas.Top="30" TextWrapping="Wrap" Width="180">
                            切换大小狐之后需手动调整ArcSegment.SweepDirection属性绘制方向。
                        </TextBlock>
                    </Canvas>

                </Grid>
            </Grid>
        </TabItem>

        <TabItem Header="贝塞尔曲线">
            <Grid Margin="4">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <TextBlock Margin="8" TextWrapping="Wrap">
                    1.在起点，贝塞尔曲线和第一个控制点到起点之间的直线相切。在终点，贝塞尔曲线和第二个控制点到终点之间的直线相切。中间是曲线。
                    <LineBreak/>
                    2.弯曲程度由到两个控制点的距离决定。如果一个控制点更远，该控制点会更强地“拉”贝塞尔曲线。
                    <LineBreak/>
                    贝塞尔曲线需要提供三个点，BezierSegment.Point1贝塞尔曲线第一个控制点，BezierSegment.Point2贝塞尔曲线第二个控制点，BezierSegment.Point3贝塞尔曲线的终点，
                    起点是路径的起点或前一条线段的终点。
                </TextBlock>

                <Canvas Grid.Row="1">
                    <Path Stroke="Blue" StrokeThickness="5" Canvas.Top="50" Canvas.Left="50">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="10,10">
                                    <BezierSegment Point1="130,30" Point2="40,140" Point3="150,150"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>

                    <Path Stroke="Green" StrokeThickness="2" StrokeDashArray="5 2" Canvas.Top="50" Canvas.Left="50">
                        <Path.Data>
                            <GeometryGroup>
                                <LineGeometry StartPoint="10,10" EndPoint="130,30"/>
                                <LineGeometry StartPoint="40,140" EndPoint="150,150"/>
                            </GeometryGroup>
                        </Path.Data>
                    </Path>

                    <Path Fill="Red" Stroke="Red" StrokeThickness="8" Canvas.Top="50" Canvas.Left="50">
                        <Path.Data>
                            <GeometryGroup>
                                <EllipseGeometry Center="10,10"/>
                                <EllipseGeometry Center="130,30"/>
                                <EllipseGeometry Center="40,140"/>
                                <EllipseGeometry Center="150,150"/>
                            </GeometryGroup>
                        </Path.Data>
                    </Path>

                    <Canvas Canvas.Top="50" Canvas.Left="30">
                        <TextBlock FontSize="10" Text="起点" Canvas.Top="4"/>
                        <TextBlock FontSize="10" Text="控制点1" Canvas.Top="24" Canvas.Left="160"/>
                        <TextBlock FontSize="10" Text="控制点2" Canvas.Top="134" Canvas.Left="12"/>
                        <TextBlock FontSize="10" Text="终点" Canvas.Top="144" Canvas.Left="180"/>
                    </Canvas>

                    <Canvas Canvas.Top="50" Canvas.Left="400">
                        <Path Stroke="Blue" StrokeThickness="2">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="0 100">
                                        <BezierSegment Point1="250,0" Point2="-50,0" Point3="200,100"/>
                                    </PathFigure>

                                    <PathFigure StartPoint="0 200">
                                        <!--创建形式更简单的贝塞尔曲线，只有一个控制点，并且计算速度更快-->
                                        <QuadraticBezierSegment Point1="100,50" Point2="200,200"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Canvas>
                </Canvas>
            </Grid>
        </TabItem>

        <TabItem Header="图形微语言">
            <Grid Margin="8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <TextBlock Margin="8" TextWrapping="Wrap" Grid.ColumnSpan="3">
                    geometry-mini-language，又称为路径微语言。当使用微语言创建几何图形时，实际上是创建了StreamGeometry对象而不是PathGeometry对象（标签使用Path.Data对象）。
                    因此，以后在代码中不能修改图形。可显示的创建PathGeometry对象，然后定义其PathFigures对象集合。
                </TextBlock>

                <Path Stroke="Blue" Grid.Row="1" VerticalAlignment="Center">
                    <Path.Data>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                M 0,50 L 100,50 L 100,0 Z
                                M 110,0 V 50 H 210 Z                                 
                                M 0,60 H 100 V 110
                                M 110,60 L 110,110 L 210 60
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </Path.Data>
                </Path>

                <TextBlock Grid.Row="1" Grid.Column="2" TextWrapping="Wrap" VerticalAlignment="Center" Margin="0,4">
                    F value -- 设置Geometry.FillRule属性。0表示EvenOdd，1表示Nonzero。如果绝对使用该命令就必须将该命令放在字符串口开头。
                    <LineBreak/>
                    M x,y -- 为几何图形创建新的PathFigure对象，并设置其起点。该命令必须在其他命令之前使用，F命令除外。也可在绘制序列期间使用该命令移动坐标系统的原点。
                    <LineBreak/>
                    L x,y -- 创建一条到指定点的LineSegment几何图形。
                    <LineBreak/>
                    H x -- 使用指定的X坐标值创建一条水平的LineSegment几何图形，保持Y坐标值不变。
                    <LineBreak/>
                    V y -- 使用指定的Y坐标值创建一条垂直的LineSegment几何图形，保存X坐标值不变。
                    <LineBreak/>
                    Z -- 结束当前PathFigure对象，并将IsClosed设置为True，如果希望将IsClosed设置False，就不必使用该命令。
                    <LineBreak/>
                    <Run Foreground="Red" Text="如果希望命令的参数值相对于前一个点，而不是使用绝对坐标进行计算，可使用小写的命令。"/>
                </TextBlock>

                <Path Grid.Row="2" Stroke="Blue">
                    <Path.Data>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                M 0,0 A 40,20 0 0 1 0,100 Z        
                                M 50,0 A 40,20 0 0 1 50,100
                                M 160,0 A 40,20 0 0 0 160,100
                                M 210,0 A 40,20 0 0 0 210,100 Z
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </Path.Data>
                </Path>

                <TextBlock Grid.Row="2" Grid.Column="2" TextWrapping="Wrap" VerticalAlignment="Center" Margin="0,4">
                    A radiuX,radiuY degrees isLargeArc isColockwise x,y -- 
                    创建一条到指定点的ArcSegment线段。指定描述弧线的椭圆半径，弧线旋转的度数，是否是大弧（或小狐），是否是顺时针（或逆时针）。
                </TextBlock>

                <Path Stroke="Blue" Grid.Row="3">
                    <Path.Data>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                M 0,60 C 240,-10 -40,-10 210,60 
                                M 0,100 Q 105,20 210,100 Z
                                M 0,120 S 100,200 80 140 S 80,140 120,160 S 120,160 120,120 S 120,160 180,160
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </Path.Data>
                </Path>

                <TextBlock Grid.Row="3" Grid.Column="2" TextWrapping="Wrap" VerticalAlignment="Center">
                    C x1,y1 x2,y2 x,y -- 创建到指定点的贝塞尔曲线BezierSegment，使用点(x1,y1)和(x2,y2)作为控制点。
                    <LineBreak/>
                    Q x1,y1 x,y -- 创建到指定点的二次贝塞尔曲线QuadraticBezierSegment，使用一个控制点(x1,y1)。
                    <LineBreak/>
                    S x2,y2, x,y -- 通过将前一条贝塞尔曲线的第二个控制点作为新建贝塞尔的第一个控制点，从而创建一条光滑的贝塞尔曲线。
                </TextBlock>
            </Grid>
        </TabItem>

        <TabItem Header="几何剪裁">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <TextBlock Grid.ColumnSpan="2" Margin="8" TextWrapping="Wrap">
                    剪裁不会考虑元素的尺寸，也就是说，当改变窗口尺寸时，剪裁区域仍保留原样，并显示在按钮的不同部分。如果放在Viewbox控件中封装元素，
                    这会导致所有的内容都按比例改变尺寸，包括希望改变尺寸的细节以及可能不希望改变的内容。
                </TextBlock>

                <Button Grid.Row="1" Background="Gold" Width="360" Height="160" BorderBrush="{x:Null}"
                        Content="这是一个按钮   " FontSize="20">
                    <Button.Clip>
                        <CombinedGeometry GeometryCombineMode="Exclude">
                            <CombinedGeometry.Geometry1>
                                <PathGeometry>
                                    <PathGeometry.Figures>
                                        M 60,0 H 280 V 160 H 60
                                        M 0,40 V 120 H 60 V 40
                                        M 280 0 A 40,40 0 0 1 280,160
                                    </PathGeometry.Figures>
                                </PathGeometry>
                            </CombinedGeometry.Geometry1>
                            <CombinedGeometry.Geometry2>
                                <GeometryGroup>
                                    <EllipseGeometry Center="280,80" RadiusX="40" RadiusY="40"/>
                                    <EllipseGeometry Center="30,60" RadiusX="10" RadiusY="10"/>
                                    <EllipseGeometry Center="30,100" RadiusX="10" RadiusY="10"/>
                                </GeometryGroup>
                            </CombinedGeometry.Geometry2>
                        </CombinedGeometry>
                    </Button.Clip>
                </Button>

                <Image Grid.Row="1" Grid.Column="1" Height="450" Width="200" Source="pack://application:,,,/ProWPFResource;component/Images/winter.jpg" Stretch="Fill">
                    <Image.Clip>
                        <CombinedGeometry>
                            <CombinedGeometry.Geometry1>
                                <PathGeometry>
                                    <PathGeometry.Figures>
                                        M 85 300 V 0 H 115 V 300
                                        M 115 40 H 180 V 70 H 115
                                        M 115 110 H 180 V 140 H 115
                                    </PathGeometry.Figures>
                                </PathGeometry>
                            </CombinedGeometry.Geometry1>
                            <CombinedGeometry.Geometry2>
                                <CombinedGeometry GeometryCombineMode="Exclude">
                                    <CombinedGeometry.Geometry1>
                                        <EllipseGeometry RadiusX="80" RadiusY="80" Center="100 370"/>
                                    </CombinedGeometry.Geometry1>
                                    <CombinedGeometry.Geometry2>
                                        <EllipseGeometry RadiusX="50" RadiusY="50" Center="100 370"/>
                                    </CombinedGeometry.Geometry2>
                                </CombinedGeometry>
                            </CombinedGeometry.Geometry2>
                        </CombinedGeometry>
                    </Image.Clip>
                </Image>
            </Grid>
        </TabItem>
    </TabControl>
</Window>
