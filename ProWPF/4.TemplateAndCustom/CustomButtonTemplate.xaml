<Window x:Class="ProWPF.TemplateAndCustom.CustomButtonTemplate"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ProWPF.TemplateAndCustom"
        mc:Ignorable="d"
        Title="自定义按钮模板" Height="550" Width="860">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Themes/Button.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="ButtonStyle" TargetType="Button">
                <Setter Property="Padding" Value="15,10"/>
                <Setter Property="Margin" Value="100,10"/>
            </Style>

            <ControlTemplate x:Key="ButtonTemplate" TargetType="Button">
                <Border x:Name="border" BorderThickness="3" CornerRadius="6" Background="Red" TextBlock.Foreground="White"
                    SnapsToDevicePixels="True">
                    <Grid Margin="2">
                        <Rectangle x:Name="rect" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2" Visibility="Hidden"/>
                        <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </Border>

                <ControlTemplate.Triggers>
                    <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter TargetName="rect" Property="Visibility" Value="Visible"/>
                    </Trigger>
                    <!--为确保该规则优先于其它规则，将其放在触发器列表的末尾-->
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="border" Property="TextBlock.Foreground" Value="Gray"/>
                        <Setter TargetName="border" Property="Background" Value="MistyRose"/>
                    </Trigger>

                    <EventTrigger RoutedEvent="MouseEnter">
                        <BeginStoryboard>
                            <Storyboard TargetName="border" TargetProperty="Background.Color">
                                <ColorAnimation To="Blue" Duration="0:0:1" AutoReverse="True" RepeatBehavior="Forever"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="MouseLeave">
                        <BeginStoryboard>
                            <Storyboard TargetName="border" TargetProperty="Background.Color">
                                <ColorAnimation Duration="0:0:0.5"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
    </Window.Resources>
    
    <StackPanel>
        <TextBlock TextWrapping="Wrap" Margin="8,8,8,20">
            继承自ContentControl类的控件，其模板包含一个ContentPresent元素，该元素指示如何放置内容。
            ContentPresent.RecognizesAccessKey属性设置为True时，表示支持访问键（下划线加字母，用Alt+字母访问）。
            ContentPresent.Content属性隐式绑定了控件的Content属性，不需要自行使用绑定。
            <LineBreak/>
            模板中Padding属性值无效，可通过将目标的Margin属性TemplateBinding绑定到控件的Padding属性。
            <LineBreak/>
            如果在控件模板和样式中都设置了触发器，那么样式触发器具有优先权。
             <LineBreak/>
            样式触发器中不能使用Setter.TragetName属性，因为样式不包含控件模板（只是引用模板而已）。因此样式不能深入到可视化树中改变嵌套的元素。
        </TextBlock>
        
        <Button Style="{StaticResource ButtonStyle}" Template="{StaticResource ButtonTemplate}" Content="A Simple Button With a Custom Template _A"/>
        <Button Style="{StaticResource ButtonStyle}" Template="{StaticResource ButtonTemplate}" Content="A Simple Button With a Custom Template _B"/>
        <Button Style="{StaticResource ButtonStyle}" Template="{StaticResource ButtonTemplate}" Content="A Simple Button With a Custom Template _C" IsEnabled="False"/>

        <Button Style="{StaticResource GradientButtonStyle}" Margin="100,10" Padding="15,10" Content="A Gradient Button _D"/>
        <Button Style="{StaticResource GradientButtonStyle}" Margin="100,10" Padding="15,10" Content="A Gradient Button _E"/>
        <Button Style="{StaticResource GradientButtonStyle}" Margin="100,10" Padding="15,10" Content="A Gradient Button _F" IsEnabled="False"/>
    </StackPanel>
</Window>
